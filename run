#!/usr/bin/python3

import os
import shlex
import subprocess
import sys
import threading

from http.server import ThreadingHTTPServer
from http.server import SimpleHTTPRequestHandler

sys.path.append("scripts")
import data_util

class VizHandler(SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path == "/js/main.js":
            # TODO
            print("Replacing data source URL...")
        if self.path == "/js/diseasemap.js":
            # TODO
            print("Replacing mapbox API key...")
        super().do_GET()

# Returns True if everything we need is here, False otherwise.
def check_dependencies():
    try:
        subprocess.check_call(shlex.split("sass --version"))
    except (subprocess.CalledProcessError, OSError):
        print("Please install 'sass' first.")
        return False
    return True

def run_sass_precompiler():
    input_files = [f for f in os.listdir("css") if f.endswith(".scss")]
    if not len(input_files):
        return None
    return subprocess.call(shlex.split("sass --watch css:css"))


def run_http_server():
    server = ThreadingHTTPServer(("localhost", 8000), VizHandler)
    server.serve_forever()

def run():
    data_util.make_country_pages()

    try:
        http = threading.Thread(target=run_http_server)
        sass = threading.Thread(target=run_sass_precompiler)
        http.start()
        sass.start()
        http.join()
        sass.join()

    except KeyboardInterrupt:
        print("Shutting down...")
        sys.exit(0)

if __name__ == '__main__':
    if not check_dependencies():
        sys.exit(1)

    run()
